from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from datetime import datetime, time as dt_time
from config import GeneralConfig as cfg
from bot.keyboards import get_main_keyboard

scheduler = AsyncIOScheduler(timezone=cfg.TIMEZONE)
bot = None
state_manager = None
process_manager = None

project_logger = None


def setup_scheduler(dp_bot, sm, pm, prj_logger):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.
    :param dp_bot: —ç–∫–∑–µ–º–ø–ª—è—Ä Bot
    :param sm: —ç–∫–∑–µ–º–ø–ª—è—Ä StateManager
    :param pm: —ç–∫–∑–µ–º–ø–ª—è—Ä ProcessManager
    """
    global bot, state_manager, process_manager, project_logger

    bot = dp_bot
    state_manager = sm
    process_manager = pm
    project_logger = prj_logger

    # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ 11:00
    scheduler.add_job(
        start_daily_reminder_cycle,
        CronTrigger(hour=11, minute=0, timezone=cfg.TIMEZONE),
        id="start_daily_reminders",
        replace_existing=True,
    )

    # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ "–°–µ–≥–æ–¥–Ω—è –±–µ–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è" –≤ 00:00
    scheduler.add_job(
        reset_daily_flags,
        CronTrigger(hour=0, minute=0, timezone=cfg.TIMEZONE),
        id="reset_daily_flags",
        replace_existing=True,
    )

    scheduler.start()
    project_logger.info("üóìÔ∏è Scheduler –∑–∞–ø—É—â–µ–Ω.")


async def start_daily_reminder_cycle():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 11:00.
    –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å 11:05 –¥–æ 19:05, –µ—Å–ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ.
    """
    current_time = datetime.now().time()
    if current_time >= dt_time(20, 0):
        return

    current_hour = datetime.now().hour
    end_hour = 20
    hours_to_remind = range(max(current_hour, 11), end_hour)

    for hour in hours_to_remind:
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ HH:05
        scheduler.add_job(
            send_reminder_if_needed,
            "cron",
            hour=hour,
            minute=5,
            id=f"reminder_{hour}",
            replace_existing=True,
            timezone=cfg.TIMEZONE,
        )


async def send_reminder_if_needed():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –µ—Å–ª–∏:
    - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ù–ï –∑–∞–ø—É—â–µ–Ω–æ
    - –∏ –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ "–°–µ–≥–æ–¥–Ω—è –±–µ–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"
    """
    if state_manager.is_tracking or state_manager.tracking_disabled_today:
        project_logger.debug(
            "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è."
        )
        return

    for user_id in cfg.TG_USER_LIST:
        try:
            await bot.send_message(
                chat_id=user_id,
                text="‚è∞ –ü–æ—Ä–∞ –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Å–æ–±–∞–∫–∏?\n"
                "–•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å?",
                reply_markup=get_main_keyboard(is_tracking=False),
                disable_notification=False,
            )
            project_logger.info(f"üì≤ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except Exception as e:
            error_msg = str(e).lower()
            if "bot was blocked" in error_msg or "user is deactivated" in error_msg:
                project_logger.info(
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
                )
            else:
                project_logger.error(
                    f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}"
                )


async def reset_daily_flags():
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00.
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ 'tracking_disabled_today'.
    """
    was_disabled = state_manager.tracking_disabled_today
    state_manager.tracking_disabled_today = False
    if was_disabled:
        project_logger.info("üîÅ –§–ª–∞–≥ 'tracking_disabled_today' —Å–±—Ä–æ—à–µ–Ω –≤ 00:00.")
